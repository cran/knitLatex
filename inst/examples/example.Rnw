\documentclass{report}

\usepackage{longtable,supertabular,hyperref}

<<setup, include=FALSE>>=
# devtools::load_all is required to load the package because it is still in
# development. For the user, you simply need require(knitLatex)
devtools::load_all('~/ignore/knitLatex', export_all=FALSE)
knitr_sethooks()
cars  <- mtcars[1:10,1:5]
megacars  <- rbind(mtcars, mtcars, mtcars)

<<mylongtable, echo=FALSE, com=TRUE, results='asis'>>=
lTab(megacars,
     label = 'tab:mylongtable',
     caption.head = 'My Long Table')

<<mysupertabular, echo=FALSE, com=TRUE, results='asis'>>=
sTab(megacars,
     label = 'tab:mysupertabular',
     caption.top = 'My Supertabular')

<<myplot, echo = FALSE, com=TRUE, fig.cap='my plot', results = 'asis'>>=
boxplot(mpg ~ gear, megacars)

@

\begin{document}

\tableofcontents

\chapter{Introduction}

This file documents the knitLatex package. The purpose of this package is to
provide \LaTeX{} helpers designed to work with the knitr package. The package
provides functions. Three of which, xTab, sTab, and lTab create table,
supertabular, and longtable environments in LaTeX respectively. The fourth
function knitr\_sethooks serves two purposes. First, it fixes a well-known bug
in knitr which occurs when using custom hooks in a ``results=`asis''' environment.
Secondly, knitr\_sethooks provides a custom command called `com'. When
``com=TRUE'' is set in a chunk, the resulting chunk is turned into a \LaTeX{}
command which can be referenced by the chunck label. For example, the chunk
``$\langle\langle$mychuck$\rangle\rangle$'' can be referenced with
\textbackslash{}mychuck anywhere is the document and the resultant \LaTeX{} will
be the same as what normally would have appeared in the spot of the chunk.

The examples in the following chapters show the knitr chunk as a comment,
followed by the code in the chunk with the results as they would appear in a
\LaTeX{} document. It is not the purpose of this file to document all the
options available within each function, but rather to show how they can be used
(with and without ``com = TRUE'') in a \LaTeX{} document. For a more detailed
description of the options available, consult the individual vignettes (entitled
  `xTab', `sTab' and `lTab'), as well as the individual
  documentations (i.e. `?xTab', `?sTab', and `?lTab').

\chapter{Preamble}

The preamble to this document is as follows:\\

\begin{verbatim}

\usepackage{longtable,supertabular,hyperref}

#<<setup, include=FALSE>>=
# devtools::load_all is required to load the package because it is still in
# development. For the user, you simply need require(knitLatex)
  devtools::load_all('~/ignore/knitLatex', export_all=FALSE)
  knitr_sethooks()
  cars  <- mtcars[1:10,1:5]
  megacars  <- rbind(mtcars, mtcars, mtcars)

#<<mylongtable, echo=FALSE, com=TRUE, results='asis'>>=
  lTab(megacars,
       label = 'tab:mylongtable',
       caption.head = 'My Long Table')

#<<mysupertabular, echo=FALSE, com=TRUE, results='asis'>>=
  sTab(megacars,
       label = 'tab:mysupertabular',
       caption.top = 'My Supertabular')

#<<myplot, echo = FALSE, com=TRUE, fig.cap='my plot', results = 'asis'>>=
  boxplot(mpg ~ gear, megacars)

  @
  
\end{verbatim}

\chapter{xTab}

This chapter demonstrates a table environment. Because we set the label option
as `tab:mytable' we can type the following:\\

\noindent
\verb|observe table \ref{tab:mytable} on page \pageref{tab:mytable}.|\\

\noindent
and produce this:\\

\noindent
observe table \ref{tab:mytable} on page \pageref{tab:mytable}.

<<mytable, results = 'asis'>>=
#<<mytable, results = 'asis'>>=
xTab(cars, label='tab:mytable', caption.bottom='My Table')
@

\chapter{sTab}

This chapter demonstrates a supertabular environment created with sTab. The
following table was produced in the preamble with this code (uncommented, of
course):

\begin{verbatim}
#<<mysupertabular, echo=FALSE, com=TRUE, results='asis'>>=
sTab(megacars,
     label = 'tab:mysupertabular',
     caption.top = 'My Supertabular')
\end{verbatim}

\noindent
We then produce the table with the following command:

\verb|\mysupertabular|

\mysupertabular

\chapter{lTab}

This chapter demonstrates a longtable environment create with lTab. The
following table was produced in the preamble with this code (uncommented, of
course):

\begin{verbatim}
#<<mylongtable, echo=FALSE, com=TRUE, results='asis'>>=
lTab(megacars,
     label = 'tab:mylongtable',
     caption.head = 'My Long Table')
\end{verbatim}

\noindent
We then produce the table with the following command:

\verb|\mylongtable|

\mylongtable

\chapter{Figure}

Even though the knitLatex package is primarily designed to be used with \LaTeX{}
tables, here is an example of using the `com' hook with a figure.

\begin{verbatim}
#<<myplot, echo = FALSE, com=TRUE, fig.cap='my plot', results = 'asis'>>=
boxplot(mpg ~ gear, megacars)
\end{verbatim}

\myplot


With a figure, ``com = TRUE'' can only be used with ``results = `asis'''. To use
the regular figure environment, you must use a traditional in-line chunk as
demonstrated in the following example. Note that there is no visible difference
between this figure and the previous one. This is because I have not defined the
knitrout environment. If I had, this figure would be displayed accordingly.

<<myotherplot, fig.cap = 'my other plot'>>=
#<<myotherplot, fig.cap = 'my other plot'>>=
boxplot(mpg ~ gear, megacars)
@

\end{document}
